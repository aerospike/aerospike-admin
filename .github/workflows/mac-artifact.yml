name: Mac Artifact

on:
  repository_dispatch:
    types: mac-build
  push:
    branches: [actionsHub, master, test-ready, TOOLS-1993-mac-build]
  pull_request:
    branches: [actionsHub]
  workflow_call:
    inputs:
      submodule:
        description: The directory of the submodule, if this workflow is being called on a submodule
        required: false
        type: string
    


jobs:
  build:
    runs-on: macos-10.15
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: recursive # for when inputs.submodule is populated
      - uses: kenchan0130/actions-system-info@master
        id: system-info
      - name: Get Python version from Pipfile
        run: |
          cd ${{ inputs.submodule || '.' }}
          git rev-parse HEAD
          echo "PYTHON_VERSION=$(grep "python_version" Pipfile | cut -d ' ' -f 3  - | tr -d '"')" >> $GITHUB_ENV
          echo ${{ steps.system-info.outputs.name }}
          echo ${{ steps.system-info.outputs.kernel-release }}
          echo ${{ steps.system-info.outputs.platform }}
      - name: Setup Python
        uses: actions/setup-python@v2
        with:
          python-version: ${{ env.PYTHON_VERSION }}
          cache: 'pipenv'
      - name: Cache asadm and asinfo
        uses: actions/cache@v3
        id: cache-asadm-asinfo
        env:
          cache-name: cache-asadm-asinfo
        with:
          path: |
            ${{ inputs.submodule || '.' }}/build/bin
          key: ${{ runner.os }}-${{ runner.arch }}-${{ steps.system-info.outputs.release }}-build-${{ env.PYTHON_VERSION }}-${{ env.cache-name }}-${{ hashFiles('**/*.py') }}-${{ hashFiles('**/*.json') }}
      - name: Pipenv setup
        if: steps.cache-asadm-asinfo.outputs.cache-hit != 'true'
        run: |
          cd ${{ inputs.submodule || '.' }}
          brew install pipenv
          pipenv check
      - name: Build asadm
        if: steps.cache-asadm-asinfo.outputs.cache-hit != 'true'
        run: |
          cd ${{ inputs.submodule || '.' }}
          make
      - name: Sanity Test tools
        run: |
          cd ${{ inputs.submodule || '.' }}/build/bin
          ls
          sudo install asadm /usr/local/bin
          ./asadm -e "info" 2>&1 | grep "Not able to connect"
          ./asinfo 2>&1 | grep "Not able to connect"
      - name: Move artifacts to target dir HACK
        run: |
          cd ${{ inputs.submodule || '.' }}
          mkdir -p target/${{ steps.system-info.outputs.platform }}-${{ runner.arch }}/${{ runner.os }}-${{ steps.system-info.outputs.release }}
          mv build/bin/* target/${{ steps.system-info.outputs.platform }}-${{ runner.arch }}/${{ runner.os }}-${{ steps.system-info.outputs.release }}
      - name: Get artifact name
        uses: haya14busa/action-cond@v1
        id: artifact-name
        with:
          cond: ${{ inputs.submodule }}
          if_true: ${{ inputs.submodule }}-binaries.tgz
          if_false: binaries.tgz
      - uses: actions/upload-artifact@v3
        with:
          name: ${{ steps.artifact-name.outputs.value }}
          path: ${{ inputs.submodule || '.' }}/target
